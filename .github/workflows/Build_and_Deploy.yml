name: Build and Deploy the application
on:
  push:
    branches:
      - main
      
  workflow_dispatch:
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          submodules: recursive
          repository: Kundankkrishna/mynodeapp.git
          ref: main

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: kundankkkrishna/newapp:latest
          
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Repository
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
  
      - name: Pull Docker image
        run: docker pull docker.io/kundankkkrishna/newapp:latest

      - name: Setup Minikube Cluster
        uses: medyagh/setup-minikube@latest
        with:
          cache: false

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: locate files
        run: |
          echo $HOME \
          pwd \
          ls -altr ~/usr/src/path/

      - name: 'Deploy'
        uses: 'deliverybot/helm@v1'
        with:
          release: 'mynodeapp'
          namespace: 'default'
          chart: 'app'
          token: '${{ github.token }}'

      # - name: Release Using Helm Chart
      #   run: | 
      #     helm install my-release ./nodeapphelmchart
        
#       - name: delete previous deployments
#         run: kubectl delete -f kube

      
                
      # - name: Run chart-releaser
      #   uses: helm/chart-releaser-action@v1.5.0
      #   with:
      #     charts_dir: charts
      #   env:
      #     CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      

      # - name: get ip 
      #   run: |
      #     ifconfig -a
          
        # run: |
        #   if [ $(helm uninstall my-release)==0 ]
        #     then
        #       helm install my-release nodeapphelmchart
        #   else
        #     helm uninstall my-release && helm install my-release nodeapphelmchart
        #   fi
          
        #   pwd && ls -la && cd .. && pwd && ls -la && cd .. && pwd && ls -al && cd mynodeapp/mynodeapp && pwd &&
        #   helm install my-release ./nodeapphelmchart
        
          
          
      - name: Test service URLs
        run: |
          minikube service list
          minikube service discover --url
          echo -n "------------------opening the service------------------"
          curl $(minikube service discover --url)/version
